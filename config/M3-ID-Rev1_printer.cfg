# M3-ID Rev.1 Klipper Configuration:
# RAMBo Electronics Board
# V4 Hotend
# Black Z-Motor
# BL Touch Support

# Compile the firmware for the AVR atmega2560

[stepper_x]
step_pin: PC0
dir_pin: PL1
enable_pin: !PA7
microsteps: 16
rotation_distance: 39.95
endstop_pin: ^PB6
position_endstop: -20.77
position_min: -20.77
position_max: 205
homing_speed: 50

[dual_carriage]   # X1-Axis configuration
axis: x
safe_distance: 30 #could probably go lower ? 
step_pin: PC6
dir_pin: !PA1
enable_pin: !PA0
microsteps: 16
rotation_distance: 39.95
endstop_pin: ^PA2 # X-Max
position_endstop:  252
position_min: 23
position_max: 252
homing_speed: 50

[stepper_y]
step_pin: PC1
dir_pin: !PL0
enable_pin: !PA6
microsteps: 16
rotation_distance: 39.95
endstop_pin: ^PB5
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_z]
step_pin: PC2
dir_pin: !PL2
enable_pin: !PA5
microsteps: 16
rotation_distance: 3.17
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 210
homing_speed: 15
homing_retract_dist: 2.0

[safe_z_home]
home_xy_position: 100, 125
speed: 50
z_hop: 10
z_hop_speed: 5

[extruder]
step_pin: PC3
dir_pin: PL6
enable_pin: !PA4
microsteps: 16
gear_ratio: 57:11
rotation_distance: 31.174
nozzle_diameter: 0.350
filament_diameter: 1.750
heater_pin: PH6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF0
control: pid
pid_kp: 16.83
pid_ki: 1.1
pid_kd: 64.51
min_temp: 0
max_temp: 300
#max_extrude_only_distance: 999

[extruder1]
step_pin: PC4
dir_pin: PL7
enable_pin: !PA3
microsteps: 16
gear_ratio: 57:11
rotation_distance: 31.174
nozzle_diameter: 0.350
filament_diameter: 1.750
heater_pin: PH4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF1
control: pid
pid_kp: 16.83
pid_ki: 1.1
pid_kd: 64.51
min_temp: 0
max_temp: 300
#max_extrude_only_distance: 999

[heater_bed]
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
min_temp: 0
max_temp: 100
control: pid
pid_kp: 56.871
pid_ki: 0.519
pid_kd: 1558.968
# HBP PID was autotuned at 60c

[fan]
pin: PH5

[heater_fan heatbreak_cooling_fan]
pin: PH3

[bltouch]
sensor_pin: ^PE3
control_pin: PG5
x_offset: 21
y_offset: 0
z_offset: 0
speed: 10.0
samples: 3
probe_with_touch_mode: true

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 20, 20
mesh_max: 180, 230
probe_count: 3, 3

# Serial needs to be edited for each electronics board
[mcu]
serial: 
baud: 250000

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 7000
max_accel_to_decel: 7000
max_z_velocity: 25
max_z_accel: 30

[input_shaper]
shaper_freq_x: 61.0
shaper_type_x: mzv
shaper_freq_y: 49.0
shaper_type_y: mzv


[ad5206 stepper_digipot]
enable_pin: PD7
# Scale the config so that the channel value can be specified in amps.
scale: 2.08
# Channel 1 is E0, 2 is E1, 3 is unused, 4 is Z, 5 is X, 6 is Y
channel_1: 1.25
channel_2: 0.75
channel_4: 0.75
channel_5: 0.75
channel_6: 0.75

# Enable 16 micro-steps on steppers X, Y, Z, E0, E1, and X1
[static_digital_output stepper_config]
pins:
    PG1, PG0,
    PK7, PG2,
    PK6, PK5,
    PK3, PK4,
    PK1, PK2,
    PC5, PL5

[output_pin dual_carriage_current]
#PWM testing ~ doesn't work that well yet
pin: PL4
pwm: True
scale: 5.0
cycle_time: .000030
hardware_pwm: True
value: 1.100
#   PC5, PL5

[static_digital_output yellow_led]
pins: !PB7


# The following config is for the KUSBA USB Accelerometer:
# https://github.com/xbst/KUSBA

#[mcu adxl]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E6624C9027623738-if00

#[adxl345]
#cs_pin: adxl:gpio1
#spi_bus: spi0a

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 100,125,20

# M2 LCD could be configured by using 
# https://www.klipper3d.org/Config_Reference.html#st7920-display


[include mainsail.cfg]

# [board_pins]
# aliases:
#     # Common EXP1/EXP2 headers found on RAMBo v1.4
#     EXP1_1=PE6, EXP1_3=PG3, EXP1_5=PJ2, EXP1_7=PJ7, EXP1_9=<GND>,
#     EXP1_2=PE2, EXP1_4=PG4, EXP1_6=PJ3, EXP1_8=PJ4, EXP1_10=<5V>,
#     # EXP2 header
#     EXP2_1=PB3, EXP2_3=PJ5, EXP2_5=PJ6, EXP2_7=PD4, EXP2_9=<GND>,
#     EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PE7, EXP2_10=PH2

[gcode_macro PARK_extruder0]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X200
    RESTORE_GCODE_STATE NAME=park0

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X200
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T0]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder0
    SET_DUAL_CARRIAGE CARRIAGE=0

[gcode_macro T1]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1

# A helper script to activate copy mode
[gcode_macro ACTIVATE_COPY_MODE]
gcode:
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X100
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

# A helper script to activate mirror mode
[gcode_macro ACTIVATE_MIRROR_MODE]
gcode:
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X200
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

## An optional input shaper support
#[input_shaper]
## The section is intentionally empty
#
#[delayed_gcode init_shaper]
#initial_duration: 0.1
#gcode:
#    SET_DUAL_CARRIAGE CARRIAGE=1
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<dual_carriage_shaper> SHAPER_FREQ_X=<dual_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
#    SET_DUAL_CARRIAGE CARRIAGE=0
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<primary_carriage_shaper> SHAPER_FREQ_X=<primary_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
